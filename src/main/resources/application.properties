## From Tutorial: https://www.callicoder.com/spring-boot-rest-api-tutorial-with-mysql-jpa-hibernate/
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#3306
#spring.datasource.url = jdbc:mysql://localhost:3306/organipath?useSSL=false&allowPublicKeyRetrieval=true
#spring.datasource.username = organiuser
#spring.datasource.password = organiPath5pringApp+

server.port=9090
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/organipath
spring.datasource.username=organiuser
spring.datasource.password=organiPath5pringApp+
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update


## Using update for spring.jpa.hibernate.ddl-auto property is fine for development.
# But, For production, You should keep the value of this property to “validate”, and use a database migration tool
# like Flyway for managing changes in the database schema.

# For Security
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000